# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '.\AttendanceTable.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

#########################################################################
#                                                                       #
#                            UI Generation                              #
#                                                                       #
#########################################################################

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import Qt, QCoreApplication, QDate

import mysql.connector
from PyQt5.QtWidgets import QMessageBox

import AttendanceDialog

import datetime

QCoreApplication.setAttribute(Qt.AA_EnableHighDpiScaling)  # Enable high DPI scaling
QCoreApplication.setAttribute(Qt.AA_UseHighDpiPixmaps)  # Use high DPI icons


class Ui_Dialog(object):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(800, 600)
        Dialog.setStyleSheet("")
        self.horizontalLayoutWidget = QtWidgets.QWidget(Dialog)
        self.horizontalLayoutWidget.setGeometry(QtCore.QRect(10, 80, 681, 511))
        self.horizontalLayoutWidget.setObjectName("horizontalLayoutWidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.tableWidget = QtWidgets.QTableWidget(self.horizontalLayoutWidget)
        self.tableWidget.setStyleSheet("")
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(5)
        self.tableWidget.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(4, item)
        self.horizontalLayout.addWidget(self.tableWidget)
        self.verticalLayoutWidget = QtWidgets.QWidget(Dialog)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(700, 80, 81, 491))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout.setContentsMargins(5, 5, 5, 5)
        self.verticalLayout.setObjectName("verticalLayout")
        self.btnNew = QtWidgets.QPushButton(self.verticalLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        self.btnNew.setFont(font)
        self.btnNew.setObjectName("btnNew")
        self.verticalLayout.addWidget(self.btnNew)
        self.btnEdit = QtWidgets.QPushButton(self.verticalLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        self.btnEdit.setFont(font)
        self.btnEdit.setObjectName("btnEdit")
        self.verticalLayout.addWidget(self.btnEdit)
        self.btnDelete = QtWidgets.QPushButton(self.verticalLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        self.btnDelete.setFont(font)
        self.btnDelete.setObjectName("btnDelete")
        self.verticalLayout.addWidget(self.btnDelete)
        spacerItem = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout.addItem(spacerItem)
        self.btnClose = QtWidgets.QDialogButtonBox(self.verticalLayoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.btnClose.sizePolicy().hasHeightForWidth())
        self.btnClose.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        self.btnClose.setFont(font)
        self.btnClose.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.btnClose.setOrientation(QtCore.Qt.Vertical)
        self.btnClose.setStandardButtons(QtWidgets.QDialogButtonBox.Close)
        self.btnClose.setCenterButtons(False)
        self.btnClose.setObjectName("btnClose")
        self.verticalLayout.addWidget(self.btnClose)
        self.formLayoutWidget = QtWidgets.QWidget(Dialog)
        self.formLayoutWidget.setGeometry(QtCore.QRect(150, 10, 221, 61))
        self.formLayoutWidget.setObjectName("formLayoutWidget")
        self.formLayout = QtWidgets.QFormLayout(self.formLayoutWidget)
        self.formLayout.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.formLayout.setFieldGrowthPolicy(QtWidgets.QFormLayout.AllNonFixedFieldsGrow)
        self.formLayout.setRowWrapPolicy(QtWidgets.QFormLayout.DontWrapRows)
        self.formLayout.setFormAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.formLayout.setContentsMargins(0, 0, 0, 0)
        self.formLayout.setHorizontalSpacing(6)
        self.formLayout.setObjectName("formLayout")
        self.lblAttendanceID = QtWidgets.QLabel(self.formLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        self.lblAttendanceID.setFont(font)
        self.lblAttendanceID.setObjectName("lblAttendanceID")
        self.formLayout.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.lblAttendanceID)
        self.lblStudentID = QtWidgets.QLabel(self.formLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        self.lblStudentID.setFont(font)
        self.lblStudentID.setObjectName("lblStudentID")
        self.formLayout.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.lblStudentID)
        self.txtAttendanceID = QtWidgets.QLineEdit(self.formLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        self.txtAttendanceID.setFont(font)
        self.txtAttendanceID.setText("")
        self.txtAttendanceID.setObjectName("txtAttendanceID")
        self.formLayout.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.txtAttendanceID)
        self.txtStudentID = QtWidgets.QLineEdit(self.formLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        self.txtStudentID.setFont(font)
        self.txtStudentID.setObjectName("txtStudentID")
        self.formLayout.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.txtStudentID)
        self.formLayoutWidget_2 = QtWidgets.QWidget(Dialog)
        self.formLayoutWidget_2.setGeometry(QtCore.QRect(380, 10, 311, 61))
        self.formLayoutWidget_2.setObjectName("formLayoutWidget_2")
        self.formLayout_2 = QtWidgets.QFormLayout(self.formLayoutWidget_2)
        self.formLayout_2.setFormAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.formLayout_2.setContentsMargins(0, 0, 0, 0)
        self.formLayout_2.setObjectName("formLayout_2")
        self.lblClassID = QtWidgets.QLabel(self.formLayoutWidget_2)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        self.lblClassID.setFont(font)
        self.lblClassID.setObjectName("lblClassID")
        self.formLayout_2.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.lblClassID)
        self.txtClassID = QtWidgets.QLineEdit(self.formLayoutWidget_2)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        self.txtClassID.setFont(font)
        self.txtClassID.setObjectName("txtClassID")
        self.formLayout_2.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.txtClassID)
        self.lblAttendanceDate = QtWidgets.QLabel(self.formLayoutWidget_2)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        self.lblAttendanceDate.setFont(font)
        self.lblAttendanceDate.setObjectName("lblAttendanceDate")
        self.formLayout_2.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.lblAttendanceDate)
        self.dateEdit = QtWidgets.QDateEdit(self.formLayoutWidget_2)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        self.dateEdit.setFont(font)
        self.dateEdit.setCalendarPopup(True)
        self.dateEdit.setObjectName("dateEdit")
        self.formLayout_2.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.dateEdit)
        self.lblTitle = QtWidgets.QLabel(Dialog)
        self.lblTitle.setGeometry(QtCore.QRect(10, 10, 121, 61))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(14)
        font.setBold(False)
        font.setWeight(50)
        self.lblTitle.setFont(font)
        self.lblTitle.setAcceptDrops(False)
        self.lblTitle.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.lblTitle.setAutoFillBackground(False)
        self.lblTitle.setStyleSheet("background-color: rgb(22, 9, 88);\n"
"color: rgb(255, 255, 255);")
        self.lblTitle.setFrameShape(QtWidgets.QFrame.Box)
        self.lblTitle.setFrameShadow(QtWidgets.QFrame.Plain)
        self.lblTitle.setLineWidth(3)
        self.lblTitle.setAlignment(QtCore.Qt.AlignCenter)
        self.lblTitle.setWordWrap(True)
        self.lblTitle.setObjectName("lblTitle")
        self.verticalLayoutWidget_2 = QtWidgets.QWidget(Dialog)
        self.verticalLayoutWidget_2.setGeometry(QtCore.QRect(700, 10, 81, 61))
        self.verticalLayoutWidget_2.setObjectName("verticalLayoutWidget_2")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_2)
        self.verticalLayout_2.setContentsMargins(5, 0, 5, 0)
        self.verticalLayout_2.setSpacing(0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.btnSearch = QtWidgets.QPushButton(self.verticalLayoutWidget_2)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.btnSearch.setFont(font)
        self.btnSearch.setObjectName("btnSearch")
        self.verticalLayout_2.addWidget(self.btnSearch)
        self.btnClear = QtWidgets.QPushButton(self.verticalLayoutWidget_2)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.btnClear.setFont(font)
        self.btnClear.setObjectName("btnClear")
        self.verticalLayout_2.addWidget(self.btnClear)
        self.frameTop = QtWidgets.QFrame(Dialog)
        self.frameTop.setGeometry(QtCore.QRect(140, 10, 641, 61))
        self.frameTop.setStyleSheet("color: rgb(255, 255, 0);")
        self.frameTop.setFrameShape(QtWidgets.QFrame.Box)
        self.frameTop.setFrameShadow(QtWidgets.QFrame.Plain)
        self.frameTop.setLineWidth(2)
        self.frameTop.setObjectName("frameTop")
        self.frameRight = QtWidgets.QFrame(Dialog)
        self.frameRight.setGeometry(QtCore.QRect(700, 80, 81, 491))
        self.frameRight.setFrameShape(QtWidgets.QFrame.Panel)
        self.frameRight.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.frameRight.setLineWidth(2)
        self.frameRight.setObjectName("frameRight")
        self.frameRight.raise_()
        self.frameTop.raise_()
        self.horizontalLayoutWidget.raise_()
        self.verticalLayoutWidget.raise_()
        self.formLayoutWidget.raise_()
        self.formLayoutWidget_2.raise_()
        self.lblTitle.raise_()
        self.verticalLayoutWidget_2.raise_()

        self.retranslateUi(Dialog)
        self.btnClose.accepted.connect(Dialog.accept) # type: ignore
        self.btnClose.rejected.connect(Dialog.reject) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(Dialog)

        self.initialSetup()

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Attendance Table"))
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("Dialog", "Attendance ID"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("Dialog", "Student ID"))
        item = self.tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("Dialog", "Class ID"))
        item = self.tableWidget.horizontalHeaderItem(3)
        item.setText(_translate("Dialog", "Present"))
        item = self.tableWidget.horizontalHeaderItem(4)
        item.setText(_translate("Dialog", "Attendance Date"))
        self.btnNew.setText(_translate("Dialog", "New"))
        self.btnEdit.setText(_translate("Dialog", "Edit"))
        self.btnDelete.setText(_translate("Dialog", "Delete"))
        self.lblAttendanceID.setText(_translate("Dialog", "Attendance ID:"))
        self.lblStudentID.setText(_translate("Dialog", "Student ID:"))
        self.lblClassID.setText(_translate("Dialog", "Class ID:"))
        self.lblAttendanceDate.setText(_translate("Dialog", "Attendance Date:"))
        self.lblTitle.setText(_translate("Dialog", "Attendance Table"))
        self.btnSearch.setText(_translate("Dialog", "Search"))
        self.btnClear.setText(_translate("Dialog", "Clear"))

#####################     End UI Generation     #####################

    def initialSetup(self):
        self.setupEvents()
        self.setupDatabase()
        self.refreshAttendance()
        # self.setupDatabase()
        # self.setupCombobox()
        # self.setValues()

    #########################################################################
    #                                                                       #
    #                            Events                                     #
    #                                                                       #
    #########################################################################

    def setupEvents(self):
        self.btnNew.clicked.connect(self.btnNewAttendance_clicked)
        self.btnEdit.clicked.connect(self.btnEditAttendance_clicked)
        self.btnDelete.clicked.connect(self.btnDeleteAttendance_clicked)
        self.btnSearch.clicked.connect(self.btnSearch_clicked)
        self.btnClear.clicked.connect(self.btnClear_clicked)

    def btnNewAttendance_clicked(self):
        Dialog = QtWidgets.QDialog()
        form = AttendanceDialog.Ui_AttendanceDialog()
        form.setupUi(Dialog, None)  # None -> no list, no need to send data when creating a new record
        result = Dialog.exec_()

        print("pre result check")

        if result == 1:  # This means the user clicked OK
            #   Get the list of results from dialog
            listValues = form.getValues()

            print("precursor")

            cursor = self.cnx.cursor()

            query = "Select * From attendance"

            cursor.execute(query)

            largestID = 0
            # Retreive the largest ID
            for (Attendance_ID, Student_ID, Class_ID, Present, Attendance_Date) in cursor:
                if (Attendance_ID > largestID):
                    largestID = Attendance_ID

            largestID += 1
            listValues[ 0 ] = str(largestID)

            print(listValues)

            # Insert the values in the database
            self.insertAttendance(listValues)

            # Refresh the table
            self.refreshAttendance()

    def btnEditAttendance_clicked(self):
        currentRow = self.tableWidget.currentRow()

        if currentRow == -1:
            QMessageBox.warning(None, "Select Row", "Please select row first")
            return

        listValues = [ ]
        listValues.append(self.tableWidget.item(currentRow, 0).text())
        listValues.append(self.tableWidget.item(currentRow, 1).text())
        listValues.append(self.tableWidget.item(currentRow, 2).text())
        # listValues.append(self.tableWidget.item(currentRow, 3).text())
        if self.tableWidget.item(currentRow, 3).text() == "Yes":
            listValues.append("Y")
        else:
            listValues.append("N")
        # Convert the string to a date
        date = self.tableWidget.item(currentRow, 4).text()
        year = int(date[ 0:4 ])
        month = int(date[ 5:7 ])
        day = int(date[ 8:10 ])
        listValues.append(datetime.date(year, month, day))

        print(listValues)

        Dialog = QtWidgets.QDialog()
        form = AttendanceDialog.Ui_AttendanceDialog()
        form.setupUi(Dialog, listValues)
        result = Dialog.exec_()

        if result == 1:  # This means the user clicked OK
            #   Get the list of results from dialog
            newValues = form.getValues()
            newValues[ 0 ] = listValues[ 0 ]  # Set the ID to the original value

            # Insert the values in the table
            # rowCount = self.tblCategories.rowCount()
            # self.tblCategories.insertRow(rowCount)  # Create new row at the end
            # self.tblCategories.setItem(rowCount, 0, QTableWidgetItem(listValues[0]))
            # self.tblCategories.setItem(rowCount, 1, QTableWidgetItem(listValues[1]))

            # Insert the values in the database
            self.updateAttendance(newValues)

            # Refresh the table
            self.refreshAttendance()

    def btnDeleteAttendance_clicked(self):
        currentRow = self.tableWidget.currentRow()

        if currentRow == -1:
            QMessageBox.warning(None, "Select Row", "Please select row first")
            return

        answer = QMessageBox.question(
            None,
            "Delete row?",
            "Are you sure you want to delete this row?",
            QMessageBox.StandardButton.Yes |
            QMessageBox.StandardButton.No
        )

        if answer == QMessageBox.StandardButton.Yes:
            ID = self.tableWidget.item(currentRow, 0).text()

            # Delete the values in the database
            self.deleteAttendance(ID)
            self.refreshAttendance()

    def btnSearch_clicked(self):
        Attendance_ID = self.txtAttendanceID.text()
        Student_ID = self.txtStudentID.text()
        Class_ID = self.txtClassID.text()
        Attendance_Date = self.dateEdit.date()

        self.filterAttendance(Attendance_ID, Student_ID, Class_ID, Attendance_Date)

    def btnClear_clicked(self):
        self.txtAttendanceID.setText("")
        self.txtStudentID.setText("")
        self.txtClassID.setText("")
        # Set to default of 1/1/2000
        self.dateEdit.setDate(datetime.date(2000, 1, 1))

        attendance = self.refreshAttendance()



    #########################################################################
    #                                                                       #
    #                            Database                                   #
    #                                                                       #
    #########################################################################

    def setupDatabase(self):
        self.connect()

    def connect(self):
        self.cnx = mysql.connector.connect(user="root",
                                            password="12345678",
                                            host="127.0.0.1",
                                            database="tracle")

    def refreshAttendance(self):
        self.tableWidget.setRowCount(0)
        cursor = self.cnx.cursor()

        query = "Select * From attendance Order By Attendance_ID Asc"

        cursor.execute(query)

        for(Attendance_ID, Student_ID, Class_ID, Present, Attendance_Date) in cursor:
            rowCount = self.tableWidget.rowCount()
            self.tableWidget.insertRow(rowCount)
            self.tableWidget.setItem(rowCount, 0, QtWidgets.QTableWidgetItem(str(Attendance_ID)))
            self.tableWidget.setItem(rowCount, 1, QtWidgets.QTableWidgetItem(str(Student_ID)))
            self.tableWidget.setItem(rowCount, 2, QtWidgets.QTableWidgetItem(str(Class_ID)))
            if(Present == 1):
                Present = 'Yes'
            else:
                Present = 'No'
            self.tableWidget.setItem(rowCount, 3, QtWidgets.QTableWidgetItem(str(Present)))
            self.tableWidget.setItem(rowCount, 4, QtWidgets.QTableWidgetItem(str(Attendance_Date)))

        cursor.close()

    def insertAttendance(self, a_listValues):
        cursor = self.cnx.cursor()

        query = ("Insert Into attendance "
                 "(Attendance_ID, Student_ID, Class_ID, Present, Attendance_Date) "
                 "Values (%s, %s, %s, %s, %s)")

        listValues = a_listValues

        if(listValues[3 ] == 'Y'):
            listValues[3 ] = '1'
        else:
            listValues[3 ] = '0'
        listValues[4 ] = listValues[4 ].toString("yyyy-MM-dd")

        print(listValues)

        cursor.execute(query, listValues)

        self.cnx.commit()

        cursor.close()

    def updateAttendance(self, a_listValues):
        cursor = self.cnx.cursor()

        query = "Update attendance " \
                "Set Student_ID = %s, Class_ID = %s, Present = %s, Attendance_Date = %s " \
                "Where Attendance_ID = %s"

        listValues = a_listValues

        if(listValues[3] == 'Y'):
            listValues[3] = '1'
        else:
            listValues[3] = '0'
        listValues[4] = listValues[4].toString("yyyy-MM-dd")
        listValues.append(listValues.pop(0))

        print(listValues)

        cursor.execute(query, listValues)

        self.cnx.commit()

        cursor.close()

    def deleteAttendance(self, a_ID):
        cursor = self.cnx.cursor()

        query = ("Delete From attendance Where Attendance_ID = %s")

        ID = (a_ID, )

        cursor.execute(query, ID)

        self.cnx.commit()

        cursor.close()

    def filterAttendance(self, a_Attendance_ID, a_Student_ID, a_Class_ID, a_Attendance_Date):
        self.tableWidget.setRowCount(0)

        cursor = self.cnx.cursor()

        query = "Select * " \
                "From attendance " \
                "WHERE (Attendance_ID = %s OR %s = '') " \
                "AND (Student_ID = %s OR %s = '') " \
                "AND (Class_ID = %s OR %s = '') " \
                "AND (Attendance_Date = %s OR %s = '2000-01-01')"

        values = []

        values.append(a_Attendance_ID)
        values.append(a_Attendance_ID)
        values.append(a_Student_ID)
        values.append(a_Student_ID)
        values.append(a_Class_ID)
        values.append(a_Class_ID)
        values.append(a_Attendance_Date.toString("yyyy-MM-dd"))
        values.append(a_Attendance_Date.toString("yyyy-MM-dd"))

        print(values)

        cursor.execute(query, values)

        for(Attendance_ID, Student_ID, Class_ID, Present, Attendance_Date) in cursor:
            rowCount = self.tableWidget.rowCount()
            self.tableWidget.insertRow(rowCount)
            self.tableWidget.setItem(rowCount, 0, QtWidgets.QTableWidgetItem(str(Attendance_ID)))
            self.tableWidget.setItem(rowCount, 1, QtWidgets.QTableWidgetItem(str(Student_ID)))
            self.tableWidget.setItem(rowCount, 2, QtWidgets.QTableWidgetItem(str(Class_ID)))
            if(Present == 1):
                Present = 'Yes'
            else:
                Present = 'No'
            self.tableWidget.setItem(rowCount, 3, QtWidgets.QTableWidgetItem(str(Present)))
            self.tableWidget.setItem(rowCount, 4, QtWidgets.QTableWidgetItem(str(Attendance_Date)))

        cursor.close()


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Dialog = QtWidgets.QDialog()
    ui = Ui_Dialog()
    ui.setupUi(Dialog)
    Dialog.show()
    sys.exit(app.exec_())
